{
"KPWHR-B": "{:retro_stringop:3:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KPWHR-BG": "{:retro_stringop:3:\"-\".join([w.lower() for w in words])}",
"KPWHR-G": "{:retro_stringop:3:\"\".join([w.lower().capitalize() for w in words])}",
"KPWHR-R": "{:retro_stringop:3:\"_\".join([w.lower() for w in words])}",
"KPWHR-RB": "{:retro_stringop:3:\"\".join([w.upper() for w in words])}",
"KPWR-B": "{:retro_stringop:2:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KPWR-BG": "{:retro_stringop:2:\"-\".join([w.lower() for w in words])}",
"KPWR-G": "{:retro_stringop:2:\"\".join([w.lower().capitalize() for w in words])}",
"KPWR-R": "{:retro_stringop:2:\"_\".join([w.lower() for w in words])}",
"KPWR-RB": "{:retro_stringop:2:\"\".join([w.upper() for w in words])}",
"KWHR-B": "{:retro_stringop:1:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWHR-BG": "{:retro_stringop:1:\"-\".join([w.lower() for w in words])}",
"KWHR-G": "{:retro_stringop:1:\"\".join([w.lower().capitalize() for w in words])}",
"KWHR-R": "{:retro_stringop:1:\"_\".join([w.lower() for w in words])}",
"KWHR-RB": "{:retro_stringop:1:\"\".join([w.upper() for w in words])}",
"KWR*R": "why are",
"KWR-B": "{:retro_stringop:1:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B": "{:retro_stringop:2:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B/KWR-B": "{:retro_stringop:3:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B/KWR-B/KWR-B": "{:retro_stringop:4:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B/KWR-B/KWR-B/KWR-B": "{:retro_stringop:5:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B": "{:retro_stringop:6:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B": "{:retro_stringop:7:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B": "{:retro_stringop:8:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B": "{:retro_stringop:9:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B/KWR-B": "{:retro_stringop:10:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"KWR-BG": "{:retro_stringop:1:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG": "{:retro_stringop:2:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG/KWR-BG": "{:retro_stringop:3:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG/KWR-BG/KWR-BG": "{:retro_stringop:4:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG": "{:retro_stringop:5:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG": "{:retro_stringop:6:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG": "{:retro_stringop:7:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG": "{:retro_stringop:8:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG": "{:retro_stringop:9:\"-\".join([w.lower() for w in words])}",
"KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG/KWR-BG": "{:retro_stringop:10:\"-\".join([w.lower() for w in words])}",
"KWR-G": "{:retro_stringop:1:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G": "{:retro_stringop:2:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G/KWR-G": "{:retro_stringop:3:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G/KWR-G/KWR-G": "{:retro_stringop:4:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G/KWR-G/KWR-G/KWR-G": "{:retro_stringop:5:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G": "{:retro_stringop:6:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G": "{:retro_stringop:7:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G": "{:retro_stringop:8:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G": "{:retro_stringop:9:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G/KWR-G": "{:retro_stringop:10:\"\".join([w.lower().capitalize() for w in words])}",
"KWR-R": "{:retro_stringop:1:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R": "{:retro_stringop:2:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R/KWR-R": "{:retro_stringop:3:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R/KWR-R/KWR-R": "{:retro_stringop:4:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R/KWR-R/KWR-R/KWR-R": "{:retro_stringop:5:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R": "{:retro_stringop:6:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R": "{:retro_stringop:7:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R": "{:retro_stringop:8:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R": "{:retro_stringop:9:\"_\".join([w.lower() for w in words])}",
"KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R/KWR-R": "{:retro_stringop:10:\"_\".join([w.lower() for w in words])}",
"KWR-RB": "{:retro_stringop:1:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB": "{:retro_stringop:2:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB/KWR-RB": "{:retro_stringop:3:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB/KWR-RB/KWR-RB": "{:retro_stringop:4:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB": "{:retro_stringop:5:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB": "{:retro_stringop:6:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB": "{:retro_stringop:7:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB": "{:retro_stringop:8:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB": "{:retro_stringop:9:\"\".join([w.upper() for w in words])}",
"KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB/KWR-RB": "{:retro_stringop:10:\"\".join([w.upper() for w in words])}",
"SKWHR-B": "{:retro_stringop:9:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"SKWHR-BG": "{:retro_stringop:9:\"-\".join([w.lower() for w in words])}",
"SKWHR-G": "{:retro_stringop:9:\"\".join([w.lower().capitalize() for w in words])}",
"SKWHR-R": "{:retro_stringop:9:\"_\".join([w.lower() for w in words])}",
"SKWHR-RB": "{:retro_stringop:9:\"\".join([w.upper() for w in words])}",
"SKWR-B": "{:retro_stringop:8:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"SKWR-BG": "{:retro_stringop:8:\"-\".join([w.lower() for w in words])}",
"SKWR-G": "{:retro_stringop:8:\"\".join([w.lower().capitalize() for w in words])}",
"SKWR-R": "{:retro_stringop:8:\"_\".join([w.lower() for w in words])}",
"SKWR-RB": "{:retro_stringop:8:\"\".join([w.upper() for w in words])}",
"STKPWHR-B": "{:retro_stringop:10:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"STKPWHR-BG": "{:retro_stringop:10:\"-\".join([w.lower() for w in words])}",
"STKPWHR-G": "{:retro_stringop:10:\"\".join([w.lower().capitalize() for w in words])}",
"STKPWHR-R": "{:retro_stringop:10:\"_\".join([w.lower() for w in words])}",
"STKPWHR-RB": "{:retro_stringop:10:\"\".join([w.upper() for w in words])}",
"TKPWHR-B": "{:retro_stringop:7:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"TKPWHR-BG": "{:retro_stringop:7:\"-\".join([w.lower() for w in words])}",
"TKPWHR-G": "{:retro_stringop:7:\"\".join([w.lower().capitalize() for w in words])}",
"TKPWHR-R": "{:retro_stringop:7:\"_\".join([w.lower() for w in words])}",
"TKPWHR-RB": "{:retro_stringop:7:\"\".join([w.upper() for w in words])}",
"TKPWR-B": "{:retro_stringop:6:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"TKPWR-BG": "{:retro_stringop:6:\"-\".join([w.lower() for w in words])}",
"TKPWR-G": "{:retro_stringop:6:\"\".join([w.lower().capitalize() for w in words])}",
"TKPWR-R": "{:retro_stringop:6:\"_\".join([w.lower() for w in words])}",
"TKPWR-RB": "{:retro_stringop:6:\"\".join([w.upper() for w in words])}",
"TKWHR-B": "{:retro_stringop:5:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"TKWHR-BG": "{:retro_stringop:5:\"-\".join([w.lower() for w in words])}",
"TKWHR-G": "{:retro_stringop:5:\"\".join([w.lower().capitalize() for w in words])}",
"TKWHR-R": "{:retro_stringop:5:\"_\".join([w.lower() for w in words])}",
"TKWHR-RB": "{:retro_stringop:5:\"\".join([w.upper() for w in words])}",
"TKWR-B": "{:retro_stringop:4:\"\".join([w.lower() if i == 0 else w.lower().capitalize() for i, w in enumerate(words)])}",
"TKWR-BG": "{:retro_stringop:4:\"-\".join([w.lower() for w in words])}",
"TKWR-G": "{:retro_stringop:4:\"\".join([w.lower().capitalize() for w in words])}",
"TKWR-R": "{:retro_stringop:4:\"_\".join([w.lower() for w in words])}",
"TKWR-RB": "{:retro_stringop:4:\"\".join([w.upper() for w in words])}"
}